#include <18F4550.h>
#fuses HSPLL, PLL5, USBDIV, NOWDT, CPUDIV1, NOPROTECT, NODEBUG, NOPBADEN, NOLVP, NOVREGEN
#use delay(clock = 48MHz)
#define LCD_DATA_PORT getenv("SFR:PORTB")
#include <lcd.c>
#include "KBD4x4.c"

// Calibración
float calibracion = 5.0; // Ajustar según la referencia de voltaje

float leer_voltaje() {
    int16 valor = read_adc(); // Leer ADC
    return (valor * calibracion * 5.0) / 1023.0; // Convertir a voltaje
}

void main(void) {
    char tecla;
    char Password[4];
    int dir = 0;
    int bateria_baja_mostrada = 0; // Estado de la batería baja

    // Configurar puertos
    set_tris_A(0xFF); // RA0 como entrada (potenciómetro)
    set_tris_D(0x00); // RD como salidas (LCD)
    
    lcd_init();       // Inicializar el LCD

    // Inicializar ADC
    setup_adc(ADC_CLOCK_DIV_2);  // Configura la frecuencia del ADC
    setup_adc_ports(AN0); // Configura RA0 como entrada analógica

    while (true) {
        float voltaje = leer_voltaje(); // Leer el voltaje

        // Verificar voltaje
        if (voltaje <= 1.0) {
            if (!bateria_baja_mostrada) { // Mostrar solo si no se ha mostrado antes
                lcd_gotoxy(1, 1);
                lcd_putc("BATERIA BAJA    ");
                output_high(PIN_A1); // Indicar batería baja
                bateria_baja_mostrada = 1; // Cambiar el estado a mostrado
                delay_ms(200); // Mostrar mensaje por 2 segundos
                output_low(PIN_A1);
            }
        } else {
            if (bateria_baja_mostrada) { // Restablecer el estado si estaba baja
                bateria_baja_mostrada = 0; // Batería ya no está baja
            }

            lcd_gotoxy(1, 1);
            lcd_putc("INGRESE PASSWORD: ");
            dir = 0; // Reiniciar el índice para el nuevo intento

            while (dir < 4) {
                tecla = kbd_getc();
                if (tecla != 0) {
                    Password[dir] = tecla;
                    lcd_putc('*'); // Mostrar '*' en lugar del carácter
                    delay_ms(50);
                    dir++;
                }
            }

            // Verificar las contraseñas
            if (Password[0] == '1' && Password[1] == '2' && Password[2] == '3' && Password[3] == '4') {
                lcd_gotoxy(1, 1);
                lcd_putc("VERDE           ");
                output_high(PIN_C0); // Encender C0
                delay_ms(300); // Esperar 10 segundos
                output_low(PIN_C0);
                lcd_gotoxy(1, 2);
                lcd_putc("                "); // Limpiar la línea 2
            } 
            else if (Password[0] == '4' && Password[1] == '3' && Password[2] == '2' && Password[3] == '1') {
                lcd_gotoxy(1, 1);
                lcd_putc("AZUL            ");
                output_high(PIN_C1); // Encender C1
                delay_ms(300); // Esperar 10 segundos
                output_low(PIN_C1);
                lcd_gotoxy(1, 2);
                lcd_putc("                "); // Limpiar la línea 2
            }
            else if (Password[0] == '5' && Password[1] == '6' && Password[2] == '7' && Password[3] == '8') {
                lcd_gotoxy(1, 1);
                lcd_putc("NARANJA         ");
                output_high(PIN_C2); // Encender C2
                delay_ms(300); // Esperar 10 segundos
                output_low(PIN_C2);
                lcd_gotoxy(1, 2);
                lcd_putc("                "); // Limpiar la línea 2
            } 
            else if (Password[0] == '8' && Password[1] == '7' && Password[2] == '6' && Password[3] == '5') {
                lcd_gotoxy(1, 1);
                lcd_putc("ROSA            ");
                output_high(PIN_C4); // Encender C4
                delay_ms(300); // Esperar 10 segundos
                output_low(PIN_C4);
                lcd_gotoxy(1, 2);
                lcd_putc("                "); // Limpiar la línea 2
            } 
            else {
                lcd_gotoxy(1, 1);
                lcd_putc("ERROR           ");
                lcd_gotoxy(1, 2);
                lcd_putc("                "); // Limpiar la línea 2
                delay_ms(200); // Esperar 2 segundos
            }

            // Al final de un intento (correcto o incorrecto), se limpia la pantalla
            lcd_gotoxy(1, 1);
            lcd_putc("INGRESE PASSWORD: "); // Mensaje para reiniciar
        }
    }
}

